you can copy an array and store it on different variable with slice()
it's different from referencing an array 

const testArray = [1,2,3,4,5]
const testCopy = testArray

testCopy will reflect testArray even if testArray changed
because the testCopy array is basically a pointer to the actual array in testArray

slice() will copy array BASED on the referenced array
so if the referenced array changed after that array is copied using slice
the new array won't be affected.

you can also use slice to selecting array elements (if you want to select more than one elements from an array)
you use 2 argument if you want to do this
1st argument is the start index of the elements you want to select
2nd argument is the end point index of the element you want to select (but this one isn't included) 

const testArray = [1,2,3,4,5]
you want to select the first 2 elements

testArray.slice(0,2) -> [1,2]
or you can use negative value for the arguments if you want to select the elements from the back
, BOTH OF THEM SHOULD BE NEGATIVE VALUES

testArray.slice(-3,-1) -> [3,4] this means that the -3 (pointing into 3) is the start point and -1 is the end point (pointing into element 5)

or you can just use 1 argument,
if you do this that means that you want to copy the elements starting from the index of your argument to the end of the array

const testArray = [1,2,3,4,5]
testArray.slice(2) -> [3,4,5]
or using negative values
testArray.slice(-4) -> [2,3,4,5]

